//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/0_Scenes/2_GAME_SCENE/Scenes/27_EatTheLand/00_Script/InputSystem/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""3DPlayer"",
            ""id"": ""09439c04-cc56-434a-bd17-2aa4c473d84d"",
            ""actions"": [
                {
                    ""name"": ""3DMove"",
                    ""type"": ""Value"",
                    ""id"": ""91bb6ede-4410-4403-a8ca-992b0ab3d109"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""ef0b939c-1829-4adf-a70d-2cfe81d5f0be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseItem"",
                    ""type"": ""Button"",
                    ""id"": ""f2deab60-2e04-4234-a3da-5902f461ea17"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""8d1d1b83-6402-40b0-ac73-169fb8f1875c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""wasd"",
                    ""id"": ""c90837eb-0449-4e70-8e1d-06c61612c45c"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3DMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""caef9871-50fb-4607-b2d4-c2831a7616e2"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3DMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4c8d4eda-fcf4-4faf-89c3-4e3ef756354c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3DMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""12b486dc-d44c-4805-b6bb-d4698eb33409"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3DMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6218f222-9719-478a-89b7-ff0fa3af7a8a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3DMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""62eb1001-2e29-46c7-af9e-420a3fdf49e0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3DMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""723f5b6f-0c4e-4574-bc7f-a4e2d87af5ae"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3DMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""49dbf49a-131a-4740-978a-3fd106a30430"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d428f2f-7ec6-4d3b-9050-1ca964b551d6"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbb23a39-0daa-4665-b191-f4a567a847fb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // 3DPlayer
        m__3DPlayer = asset.FindActionMap("3DPlayer", throwIfNotFound: true);
        m__3DPlayer__3DMove = m__3DPlayer.FindAction("3DMove", throwIfNotFound: true);
        m__3DPlayer_LeftClick = m__3DPlayer.FindAction("LeftClick", throwIfNotFound: true);
        m__3DPlayer_UseItem = m__3DPlayer.FindAction("UseItem", throwIfNotFound: true);
        m__3DPlayer_Jump = m__3DPlayer.FindAction("Jump", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // 3DPlayer
    private readonly InputActionMap m__3DPlayer;
    private List<I_3DPlayerActions> m__3DPlayerActionsCallbackInterfaces = new List<I_3DPlayerActions>();
    private readonly InputAction m__3DPlayer__3DMove;
    private readonly InputAction m__3DPlayer_LeftClick;
    private readonly InputAction m__3DPlayer_UseItem;
    private readonly InputAction m__3DPlayer_Jump;
    public struct _3DPlayerActions
    {
        private @PlayerInputAction m_Wrapper;
        public _3DPlayerActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @_3DMove => m_Wrapper.m__3DPlayer__3DMove;
        public InputAction @LeftClick => m_Wrapper.m__3DPlayer_LeftClick;
        public InputAction @UseItem => m_Wrapper.m__3DPlayer_UseItem;
        public InputAction @Jump => m_Wrapper.m__3DPlayer_Jump;
        public InputActionMap Get() { return m_Wrapper.m__3DPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(_3DPlayerActions set) { return set.Get(); }
        public void AddCallbacks(I_3DPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m__3DPlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m__3DPlayerActionsCallbackInterfaces.Add(instance);
            @_3DMove.started += instance.On_3DMove;
            @_3DMove.performed += instance.On_3DMove;
            @_3DMove.canceled += instance.On_3DMove;
            @LeftClick.started += instance.OnLeftClick;
            @LeftClick.performed += instance.OnLeftClick;
            @LeftClick.canceled += instance.OnLeftClick;
            @UseItem.started += instance.OnUseItem;
            @UseItem.performed += instance.OnUseItem;
            @UseItem.canceled += instance.OnUseItem;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
        }

        private void UnregisterCallbacks(I_3DPlayerActions instance)
        {
            @_3DMove.started -= instance.On_3DMove;
            @_3DMove.performed -= instance.On_3DMove;
            @_3DMove.canceled -= instance.On_3DMove;
            @LeftClick.started -= instance.OnLeftClick;
            @LeftClick.performed -= instance.OnLeftClick;
            @LeftClick.canceled -= instance.OnLeftClick;
            @UseItem.started -= instance.OnUseItem;
            @UseItem.performed -= instance.OnUseItem;
            @UseItem.canceled -= instance.OnUseItem;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
        }

        public void RemoveCallbacks(I_3DPlayerActions instance)
        {
            if (m_Wrapper.m__3DPlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(I_3DPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m__3DPlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m__3DPlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public _3DPlayerActions @_3DPlayer => new _3DPlayerActions(this);
    public interface I_3DPlayerActions
    {
        void On_3DMove(InputAction.CallbackContext context);
        void OnLeftClick(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
}
